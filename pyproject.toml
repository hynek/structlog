# SPDX-License-Identifier: MIT OR Apache-2.0

[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme>=22.8.0"]
build-backend = "hatchling.build"


[project]
dynamic = ["readme", "version"]
name = "structlog"
description = "Structured Logging for Python"
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.7"
license = { file = "COPYRIGHT" }
keywords = ["logging", "structured", "structure", "log"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
]
dependencies = [
    "typing-extensions; python_version<'3.8'",
    "importlib_metadata; python_version<'3.8'",
]

[project.urls]
Documentation = "https://www.structlog.org/"
Changelog = "https://www.structlog.org/en/stable/changelog.html"
"Bug Tracker" = "https://github.com/hynek/structlog/issues"
"Source Code" = "https://github.com/hynek/structlog"
Funding = "https://github.com/sponsors/hynek"
Tidelift = "https://tidelift.com/subscription/pkg/pypi-structlog?utm_source=pypi-structlog&utm_medium=pypi"


[project.optional-dependencies]
tests = [
    "coverage[toml]",
    "freezegun>=0.2.8",
    "pretend",
    "pytest-asyncio>=0.17",
    "pytest>=6.0",
    "simplejson",
]
# Need Twisted & Rich for stubs.
# Otherwise mypy fails in tox.
typing = ["mypy", "rich", "twisted"]
docs = [
    "furo",
    "myst-parser",
    "sphinx",
    "sphinx-notfound-page",
    "sphinxcontrib-mermaid",
    "twisted",
]
dev = ["structlog[tests,typing,docs]"]


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
testpaths = "tests"
xfail_strict = true
filterwarnings = ["once::Warning"]
asyncio_mode = "auto"


[tool.coverage.run]
parallel = true
branch = true
source = ["structlog"]

[tool.coverage.paths]
source = ["src", ".tox/py*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = ["src/structlog/_greenlets.py"]
exclude_lines = [
    # a more strict default pragma
    "\\# pragma: no cover\\b",

    # allow defensive code
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*return NotImplemented\\b",
    "^\\s*raise$",

    # typing-related code
    "^if (False|TYPE_CHECKING):",
    ": \\.\\.\\.(\\s*#.*)?$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]


[tool.black]
line-length = 79


[tool.isort]
profile = "attrs"


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]
ignore_missing_imports = true

warn_return_any = false

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = '''<p align="center">
    <img
        src="https://www.structlog.org/en/stable/_static/structlog_logo_small_transparent.png"
        alt="structlog mascot"
    />
</p>
'''

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- begin-short -->\n"
end-before = "\n<!-- end-short -->"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- begin-meta -->\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """


## Release Information

"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """
---

[Full changelog](https://www.structlog.org/en/stable/changelog.html)


"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-at = "## Credits"
end-before = "<!-- begin-meta -->"


[tool.hatch.envs.tests]
features = ["tests"]
dev-mode = false

[tool.hatch.envs.tests.scripts]
run = "coverage run -m pytest"

[[tool.hatch.envs.tests.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]


[tool.hatch.envs.coverage]
detached = true
dependencies = [
  "coverage[toml]>=6.2",
  "lxml",
]
[tool.hatch.envs.coverage.scripts]
combine = "coverage combine {args}"
report = "coverage report --skip-covered --skip-empty"
