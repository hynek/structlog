[flake8]
ignore = E203,W503,W504

# Keep docs in sync with docs env and .readthedocs.yml.
# We don't run pre-commit in CI, because we use pre-commit.ci.
[gh-actions]
python =
    3.7: py37  # mypy on 3.7 fails but there's nothing we can do about it
    3.8: py38, mypy
    3.9: py39, mypy
    3.10: py310, mypy, cogCheck, docs
    3.11: py311


[tox]
envlist = pre-commit,mypy,cogCheck,cog,py37,py38,py39,py310,py39-colorama,py310-be,py310-rich,py311,docs,pypi-description,coverage-report
isolated_build = True


[testenv:docs]
# Keep basepython in sync with gh-actions and .readthedocs.yml.
basepython = python3.10
extras =
    docs
passenv = TERM
setenv =
    PYTHONHASHSEED = 0
commands =
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:pre-commit]
basepython = python3.10
skip_install = true
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files


[testenv:mypy]
description = Check types
extras = tests
# Need twisted & rich for stubs.
# Otherwise mypy fails in tox.
deps =
    mypy
    rich
    twisted
commands = mypy src typing_examples.py


[testenv:cog]
description = "Update pyproject.toml's metadata"
skip_install = true
deps =
    cogapp>=3.3.0
    tomli
commands = python -m cogapp -rP pyproject.toml


[testenv:cogCheck]
description = "Ensure pyproject.toml is up to date"
basepython = python3.10
skip_install = true
deps = {[testenv:cog]deps}
commands = python -m cogapp --check -P pyproject.toml


[testenv]
extras = tests
deps =
    colorama: twisted
setenv =
    PYTHONHASHSEED = 0
commands = python -m pytest {posargs}


# For missing types
[testenv:py37]
deps = twisted
setenv =
    PYTHONHASHSEED = 0
commands =
    python -m coverage run -m pytest {posargs}


[testenv:py310]
deps = twisted
setenv =
    PYTHONHASHSEED = 0
commands =
    python -m coverage run -m pytest {posargs}
    python -OO -m coverage run -m pytest tests/test_optimized.py


[testenv:py39-colorama]
deps = colorama
commands = python -m coverage run -m pytest tests/test_dev.py {posargs}


[testenv:py310-be]
deps = better-exceptions
commands = python -m coverage run -m pytest tests/test_dev.py {posargs}


[testenv:py310-rich]
deps = rich
commands = python -m coverage run -m pytest tests/test_dev.py {posargs}


[testenv:coverage-report]
basepython = python3.10
deps = coverage[toml]
skip_install = true
parallel_show_output = true
depends = py37,py310,py39-colorama,py310-be,py310-rich
commands =
    python -m coverage combine
    python -m coverage report


[testenv:pypi-description]
basepython = python3.10
skip_install = true
deps =
    twine
    pip >= 18.0.0
# Needs to run last, otherwise we have a race condition about coverage files
# lying around.
depends = coverage-report
commands =
    pip install --upgrade pip
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*
