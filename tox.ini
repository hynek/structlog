[tox]
min_version = 4
env_list =
    pre-commit,
    mypy-pkg,
    py3{8,9,10,11,12,13}-{tests,mypy}
    py3{8,13}-tests-{colorama,be,rich},
    docs-{sponsors,doctests},
    coverage-report


[testenv]
package = wheel
wheel_build_env = .pkg
extras =
    tests: tests
    mypy: typing
commands =
    tests: pytest {posargs}
    mypy: mypy tests/typing


# Run oldest and latest under Coverage.
# Keep in-sync with coverage `depends below.
[testenv:py3{8,13}-tests{,-colorama,-be,-rich}]
deps =
    coverage[toml]
    py313: twisted
    colorama: colorama
    rich: rich
    be: better-exceptions
commands = coverage run -m pytest {posargs}


[testenv:coverage-report]
deps = coverage[toml]
skip_install = true
parallel_show_output = true
# Keep in-sync with test env definition above.
depends = py3{8,13}-{tests,colorama,be,rich}
commands =
    coverage combine
    coverage report


[testenv:docs-{build,doctests,linkcheck}]
# Keep base_python in sync with ci.yml/docs and .readthedocs.yaml.
base_python = py313
extras = docs
commands =
    build: sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs {posargs:docs/_build/}html
    doctests: sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs {posargs:docs/_build/}html
    linkcheck: sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/html

[testenv:docs-watch]
package = editable
base_python = {[testenv:docs-build]base_python}
extras = {[testenv:docs-build]extras}
deps = watchfiles
commands =
    watchfiles \
        --ignore-paths docs/_build/ \
        'sphinx-build -W -n --jobs auto -b html -d {envtmpdir}/doctrees docs docs/_build/html' \
        src \
        docs

[testenv:docs-sponsors]
description = Ensure sponsor logos are up to date.
deps = cogapp
commands = cog -rP README.md docs/index.md


[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files


[testenv:mypy-pkg]
extras = typing
commands = mypy src


[testenv:pyright]
deps = pyright
extras = typing
commands = pyright tests/typing


[testenv:color-force]
help = A visual check that FORCE_COLOR is working.
set_env = FORCE_COLOR=1
commands = python -c "import structlog; structlog.get_logger().warning('should be colorful')"


[testenv:color-no]
help = A visual check that NO_COLOR is working.
set_env = NO_COLOR=1
commands = python -c "import structlog; structlog.get_logger().warning('should be plain')"


[testenv:docset]
deps = doc2dash
extras = docs
allowlist_externals =
    rm
    cp
    tar
commands =
    rm -rf structlog.docset structlog.tgz docs/_build
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    doc2dash --index-page index.html --icon docs/_static/docset-icon.png --online-redirect-url https://www.structlog.org/en/latest/ docs/_build/html
    cp docs/_static/docset-icon@2x.png structlog.docset/icon@2x.png
    tar --exclude='.DS_Store' -cvzf structlog.tgz structlog.docset
